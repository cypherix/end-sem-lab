To add a slide menu bar (also known as a Navigation Drawer) to your Android app, you need to follow several steps. This includes setting up the `DrawerLayout`, adding a `NavigationView`, and handling menu item clicks. Below are the detailed steps:

### Step 1: Update your dependencies

Ensure you have the necessary dependencies in your `build.gradle` file:

```groovy
dependencies {
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.drawerlayout:drawerlayout:1.1.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
}
```

### Step 2: Update your activity_main.xml

Add a `DrawerLayout` with a `NavigationView` to your `activity_main.xml`:

```xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.drawerlayout.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/drawer_layout"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <!-- Main content -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical">

        <androidx.appcompat.widget.Toolbar
            android:id="@+id/toolbar"
            android:layout_width="match_parent"
            android:layout_height="?attr/actionBarSize"
            android:background="?attr/colorPrimary"
            android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
            app:popupTheme="@style/ThemeOverlay.AppCompat.Light" />

        <!-- Your existing content (RecyclerView, etc.) -->
        <androidx.recyclerview.widget.RecyclerView
            android:id="@+id/ordersRecyclerView"
            android:layout_width="match_parent"
            android:layout_height="match_parent" />
    </LinearLayout>

    <!-- Navigation Drawer -->
    <com.google.android.material.navigation.NavigationView
        android:id="@+id/navigation_view"
        android:layout_width="wrap_content"
        android:layout_height="match_parent"
        android:layout_gravity="start"
        app:menu="@menu/drawer_menu" />
</androidx.drawerlayout.widget.DrawerLayout>
```

### Step 3: Create a menu resource file for the NavigationView

Create a file named `drawer_menu.xml` in the `res/menu` directory:

```xml
<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android">
    <item
        android:id="@+id/nav_home"
        android:icon="@drawable/ic_home"
        android:title="Home" />
    <item
        android:id="@+id/nav_profile"
        android:icon="@drawable/ic_profile"
        android:title="Profile" />
    <item
        android:id="@+id/nav_settings"
        android:icon="@drawable/ic_settings"
        android:title="Settings" />
</menu>
```

### Step 4: Update MainActivity.java

Initialize the `DrawerLayout`, `NavigationView`, and set up the `ActionBarDrawerToggle`:

```java
package com.example.end_sem_lab;

import android.os.Bundle;
import android.view.MenuItem;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.ActionBarDrawerToggle;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;
import androidx.core.view.GravityCompat;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.example.end_sem_lab.Adapters.OrderAdapter;
import com.example.end_sem_lab.Helpers.DBHelperOrder;
import com.example.end_sem_lab.Models.Order;
import com.google.android.material.navigation.NavigationView;

import java.util.ArrayList;
import java.util.List;

public class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {

    private DrawerLayout drawerLayout;
    private DBHelperOrder dbHelperOrder;
    private RecyclerView ordersRecyclerView;
    private OrderAdapter orderAdapter;
    private List<Order> orderList;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Toolbar toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        drawerLayout = findViewById(R.id.drawer_layout);
        NavigationView navigationView = findViewById(R.id.navigation_view);
        navigationView.setNavigationItemSelectedListener(this);

        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
                this, drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
        drawerLayout.addDrawerListener(toggle);
        toggle.syncState();

        dbHelperOrder = new DBHelperOrder(this);
        ordersRecyclerView = findViewById(R.id.ordersRecyclerView);
        ordersRecyclerView.setLayoutManager(new LinearLayoutManager(this));
        orderList = new ArrayList<>();

        // Adding a new customer
        if (dbHelperOrder.addCustomer("John Doe", "john@example.com", "1234567890")) {
            Toast.makeText(this, "Customer added successfully", Toast.LENGTH_SHORT).show();
        } else {
            Toast.makeText(this, "Failed to add customer", Toast.LENGTH_SHORT).show();
        }

        // Adding a new product
        if (dbHelperOrder.addProduct("Product 1", 10.5, 100)) {
            Toast.makeText(this, "Product added successfully", Toast.LENGTH_SHORT).show();
        } else {
            Toast.makeText(this, "Failed to add product", Toast.LENGTH_SHORT).show();
        }

        // Adding a new order
        if (dbHelperOrder.addOrder(1, 1, 2, "2023-07-02")) {
            Toast.makeText(this, "Order added successfully", Toast.LENGTH_SHORT).show();
        } else {
            Toast.makeText(this, "Failed to add order", Toast.LENGTH_SHORT).show();
        }

        // Fetching all orders
        Cursor cursor = dbHelperOrder.getAllOrders();
        if (cursor != null && cursor.getCount() > 0) {
            while (cursor.moveToNext()) {
                int orderId = cursor.getInt(cursor.getColumnIndex("id"));
                int customerId = cursor.getInt(cursor.getColumnIndex("customer_id"));
                int productId = cursor.getInt(cursor.getColumnIndex("product_id"));
                int quantity = cursor.getInt(cursor.getColumnIndex("quantity"));
                String orderDate = cursor.getString(cursor.getColumnIndex("order_date"));

                Order order = new Order(orderId, customerId, productId, quantity, orderDate);
                orderList.add(order);
            }
            cursor.close();
        } else {
            Toast.makeText(this, "No orders found", Toast.LENGTH_SHORT).show();
        }

        orderAdapter = new OrderAdapter(orderList);
        ordersRecyclerView.setAdapter(orderAdapter);
    }

    @Override
    public boolean onNavigationItemSelected(@NonNull MenuItem item) {
        int id = item.getItemId();

        if (id == R.id.nav_home) {
            Toast.makeText(this, "Home clicked", Toast.LENGTH_SHORT).show();
        } else if (id == R.id.nav_profile) {
            Toast.makeText(this, "Profile clicked", Toast.LENGTH_SHORT).show();
        } else if (id == R.id.nav_settings) {
            Toast.makeText(this, "Settings clicked", Toast.LENGTH_SHORT).show();
        }

        drawerLayout.closeDrawer(GravityCompat.START);
        return true;
    }

    @Override
    public void onBackPressed() {
        if (drawerLayout.isDrawerOpen(GravityCompat.START)) {
            drawerLayout.closeDrawer(GravityCompat.START);
        } else {
            super.onBackPressed();
        }
    }
}
```

### Step 5: Add String Resources

Add the following strings to your `res/values/strings.xml` file:

```xml
<resources>
    <string name="navigation_drawer_open">Open navigation drawer</string>
    <string name="navigation_drawer_close">Close navigation drawer</string>
</resources>
```

### Step 6: Update the `AndroidManifest.xml`

Ensure that your `MainActivity` is declared in the `AndroidManifest.xml`:

```xml
<application
    ...>
    <activity android:name=".MainActivity">
        <intent-filter>
            <action android:name="android.intent.action.MAIN" />
            <category android:name="android.intent.category.LAUNCHER" />
        </intent-filter>
    </activity>
</application>
```

### Summary

- **activity_main.xml**: Contains `DrawerLayout`, `NavigationView`, and the main content.
- **drawer_menu.xml**: Menu items for the `NavigationView`.
- **MainActivity.java**: Manages the drawer and handles navigation item clicks.
- **String resources**: Needed for the navigation drawer.

This setup will give you a functional slide menu bar (Navigation Drawer) in your Android application. When you click on an item in the drawer, a toast message will be shown. You can replace these toast messages with actual navigation logic as per your requirements.